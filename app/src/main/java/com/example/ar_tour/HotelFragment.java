package com.example.ar_tour;import android.net.Uri;import android.os.Bundle;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.appcompat.app.ActionBar;import androidx.fragment.app.Fragment;import androidx.lifecycle.ViewModelProvider;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.Button;import android.widget.EditText;import android.widget.ListView;import com.android.volley.AuthFailureError;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import org.jetbrains.annotations.NotNull;import org.json.JSONArray;import org.json.JSONObject;import java.util.ArrayList;import java.util.HashMap;import java.util.Map;/** * A simple {@link Fragment} subclass. * Use the {@link HotelFragment#newInstance} factory method to * create an instance of this fragment. */public class HotelFragment extends Fragment {    private EditText edloc;    private static final String TAG = Hotel.class.getSimpleName();    private ArrayList<String> destid =new ArrayList<>();    ArrayList<Hotelhelper> hotelhelpers =new ArrayList<>();    HotelAdapter hotelAdapter;    // TODO: Rename parameter arguments, choose names that match    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER    private static final String ARG_PARAM1 = "param1";    private static final String ARG_PARAM2 = "param2";    // TODO: Rename and change types of parameters    private String mParam1;    private String mParam2;    public HotelFragment() {        // Required empty public constructor    }    /**     * Use this factory method to create a new instance of     * this fragment using the provided parameters.     *     * @param param1 Parameter 1.     * @param param2 Parameter 2.     * @return A new instance of fragment HotelFragment.     */    // TODO: Rename and change types and number of parameters    public static HotelFragment newInstance(String param1, String param2) {        HotelFragment fragment = new HotelFragment();        Bundle args = new Bundle();        args.putString(ARG_PARAM1, param1);        args.putString(ARG_PARAM2, param2);        fragment.setArguments(args);        return fragment;    }    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        if (getArguments() != null) {            mParam1 = getArguments().getString(ARG_PARAM1);            mParam2 = getArguments().getString(ARG_PARAM2);        }    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        return inflater.inflate(R.layout.fragment_hotel, container, false);    }    @Override    public void onViewCreated(@NonNull @NotNull View view, @Nullable @org.jetbrains.annotations.Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        edloc=(view).findViewById(R.id.searchlocf);        Button submit =(view).findViewById(R.id.subitbtnf);        submit.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                String Edloc=edloc.getText().toString();                if (hotelhelpers.size()!=0){                    hotelhelpers.clear();                }                getLocationid(Edloc);            }        });    }    private void getLocationid(String EDloc){        RequestQueue requestQueue = Volley.newRequestQueue(getContext());        Log.v(TAG,"Destination String : "+EDloc);        String t = EDloc;        String url = "https://hotels4.p.rapidapi.com/locations/search?query="+t+"&locale=en_US";        String uri = Uri.parse(url)                .buildUpon()                .build().toString();        StringRequest stringRequest = new StringRequest(Request.Method.GET, uri, new Response.Listener<String>() {            @Override            public void onResponse(String response) {                Log.d("VolleyResponse", "response: " + response);                try {                    JSONObject root = new JSONObject(response);                    //TODO: Parse JSON array......                    JSONArray suggestions = root.getJSONArray("suggestions");                    for (int i=0;i<suggestions.length();i++){                        JSONObject sugobj =suggestions.optJSONObject(i);                        JSONArray entites = sugobj.optJSONArray("entities");                        for (int j=0;j<entites.length();j++){                            JSONObject etobj = entites.optJSONObject(j);                            String destinationid = etobj.optString("destinationId");                            Log.v(TAG,"Destination ID : "+destinationid);                            //destid.add(destinationid);                            getHotellist(destinationid);                        }                    }                    //Log.v(TAG,"Destination ID : "+destid);                } catch (Exception e) {                    e.printStackTrace();                }            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                Log.e("VolleyError", error.toString());            }        }){            @Override            public Map<String, String> getHeaders() throws AuthFailureError {                Map<String, String>  params = new HashMap<>();                params.put("X-RapidAPI-Host", "hotels4.p.rapidapi.com");                params.put("X-RapidAPI-Key", "c332486ef4msh1b1ff96daa23844p1236b4jsn662354e9312a");   //changed key                return params;            }        };        requestQueue.add(stringRequest);    }    //Get hotels list on specific location.....    private void getHotellist(String destid){        String test =destid;        Log.v(TAG,"Destination Message :"+test);        SharedviewModel sharedviewModel =new ViewModelProvider(requireActivity()).get(SharedviewModel.class);        RequestQueue requestQueue = Volley.newRequestQueue(getContext());        String  url ="https://hotels4.p.rapidapi.com/properties/list?destinationId="+test+"&pageNumber=1&checkIn=2020-01-08&checkOut=2020-01-15&pageSize=25&adults1=1&currency=USD&locale=en_US&sortOrder=PRICE";        String uri = Uri.parse(url)                .buildUpon()                .build().toString();        StringRequest stringRequest =new StringRequest(Request.Method.GET, uri, new Response.Listener<String>() {            @Override            public void onResponse(String response) {                try {                    //TODO: parse hotels list json file.....                    JSONObject root =new JSONObject(response);                    String testst = root.optString("result");                    Log.v(TAG,"RESULTS : "+testst);                    JSONObject dataobj = root.optJSONObject("data");                    JSONObject bodyobj = dataobj.optJSONObject("body");                    JSONObject searchobj = bodyobj.optJSONObject("searchResults");                    JSONArray results = searchobj.optJSONArray("results");                    for (int i =0;i<results.length();i++){                        JSONObject resobj = results.optJSONObject(i);                        String Hname = resobj.optString("name");                        JSONObject addobj = resobj.optJSONObject("address");                        String sadd = addobj.optString("streetAddress");                        String ladd = addobj.optString("locality");                        String reg = addobj.optString("region");                        String country = addobj.optString("countryName");                        /*JSONObject reviewz = resobj.optJSONObject("guestReviews");                        String  rating = reviewz.optString("rating");                        Log.v(TAG,"Rate :"+rating);*/                        JSONObject rate = resobj.optJSONObject("ratePlan");                        JSONObject price = rate.optJSONObject("price");                        String priceinfo = price.getString("current");                        String address = sadd+","+ladd+","+reg+","+country;                        hotelhelpers.add(new Hotelhelper(Hname,address,priceinfo));                    }                    hotelAdapter =new HotelAdapter(getActivity(),hotelhelpers);                    ListView listView =getView().findViewById(R.id.hotelsidf);                    listView.setAdapter(hotelAdapter);                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {                        @Override                        public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {                            Hotelhelper hotelhelper = hotelhelpers.get(i);                            String h_name = hotelhelper.getmHname();                            sharedviewModel.setResultsh(h_name);                            getParentFragmentManager().popBackStack();                        }                    });                } catch (Exception e) {                    e.printStackTrace();                }            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                Log.e("VolleyError", error.toString());            }        }){            @Override            public Map<String, String> getHeaders() throws AuthFailureError {                Map<String, String>  params = new HashMap<>();                params.put("X-RapidAPI-Host", "hotels4.p.rapidapi.com");                params.put("X-RapidAPI-Key", "c332486ef4msh1b1ff96daa23844p1236b4jsn662354e9312a");   //changed key                return params;            }        };        requestQueue.add(stringRequest);    }}
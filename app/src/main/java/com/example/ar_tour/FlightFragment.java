package com.example.ar_tour;import android.net.Uri;import android.os.Bundle;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.appcompat.app.ActionBar;import androidx.fragment.app.Fragment;import androidx.lifecycle.ViewModelProvider;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.Button;import android.widget.EditText;import android.widget.ListView;import com.android.volley.AuthFailureError;import com.android.volley.Request;import com.android.volley.RequestQueue;import com.android.volley.Response;import com.android.volley.VolleyError;import com.android.volley.toolbox.StringRequest;import com.android.volley.toolbox.Volley;import org.jetbrains.annotations.NotNull;import org.json.JSONArray;import org.json.JSONObject;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;/** * A simple {@link Fragment} subclass. * Use the {@link FlightFragment#newInstance} factory method to * create an instance of this fragment. */public class FlightFragment extends Fragment {    private static final String TAG = FlightFragment.class.getSimpleName();    private List<String > arrival =new ArrayList<>();    private List<String> Depature =new ArrayList<>();    private final ArrayList<FlightHelper> flightHelpers =new ArrayList<>();    private ArrayList<String> flightHelpersname =new ArrayList<>();    private FlightAdapter flightAdapter;    // TODO: Rename parameter arguments, choose names that match    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER    private static final String ARG_PARAM1 = "param1";    private static final String ARG_PARAM2 = "param2";    // TODO: Rename and change types of parameters    private String mParam1;    private String mParam2;    public FlightFragment() {        // Required empty public constructor    }    /**     * Use this factory method to create a new instance of     * this fragment using the provided parameters.     *     * @param param1 Parameter 1.     * @param param2 Parameter 2.     * @return A new instance of fragment FlightFragment.     */    // TODO: Rename and change types and number of parameters    public static FlightFragment newInstance(String param1, String param2) {        FlightFragment fragment = new FlightFragment();        Bundle args = new Bundle();        args.putString(ARG_PARAM1, param1);        args.putString(ARG_PARAM2, param2);        fragment.setArguments(args);        return fragment;    }    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        if (getArguments() != null) {            mParam1 = getArguments().getString(ARG_PARAM1);            mParam2 = getArguments().getString(ARG_PARAM2);        }    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        return inflater.inflate(R.layout.fragment_flight, container, false);    }    @Override    public void onViewCreated(@NonNull @NotNull View view, @Nullable @org.jetbrains.annotations.Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        EditText arrivaltxt =view.findViewById(R.id.arrivalcityf);        EditText depcity =view.findViewById(R.id.depaturenamef);        Button subtn =view.findViewById(R.id.gobtnf);        subtn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                String arr= arrivaltxt.getText().toString();                String dep = depcity.getText().toString();                getarrivalCodes(arr,dep);            }        });    }    private void getarrivalCodes(String arlocation,String deplocation){        RequestQueue requestQueue = Volley.newRequestQueue(getContext());        final String t = arlocation;        String url = "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/UK/GBP/en-GB/?query="+ t;        String uri = Uri.parse(url)                .buildUpon()                .build().toString();        StringRequest stringRequest=new StringRequest(Request.Method.GET, uri, new Response.Listener<String>() {            @Override            public void onResponse(String response) {                try {                    JSONObject root =new JSONObject(response);                    Log.d(TAG,"cheeking for update : "+response);                    JSONArray places =root.optJSONArray("Places");                    for (int i=0;i<places.length();i++){                        JSONObject placeobj = places.optJSONObject(i);                        String placeid = placeobj.optString("PlaceId");                        arrival.add(placeid);                        Log.d(TAG,"cheeking for update for arrival : "+arrival);                    }                    //TODO: call function flight list......                    getdepatureCodes(deplocation);                } catch (Exception e) {                    Log.e(TAG, "error : " + e);                }            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                Log.e(TAG, "volley error : " + error);            }        }){            @Override            public Map<String, String> getHeaders() throws AuthFailureError {                Map<String, String>  params = new HashMap<>();                params.put("X-RapidAPI-Host", "skyscanner-skyscanner-flight-search-v1.p.rapidapi.com");                params.put("X-RapidAPI-Key", "c332486ef4msh1b1ff96daa23844p1236b4jsn662354e9312a");   //changed key                return params;            }        };        requestQueue.add(stringRequest);        Log.v(TAG, "Before return : " + arrival);        //return code;    }    private void getdepatureCodes(String depature){        RequestQueue requestQueue = Volley.newRequestQueue(getContext());        String t = depature;        String url = "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/UK/GBP/en-GB/?query="+t;        String uri = Uri.parse(url)                .buildUpon()                .build().toString();        StringRequest stringRequest=new StringRequest(Request.Method.GET, uri, new Response.Listener<String>() {            @Override            public void onResponse(String response) {                try {                    JSONObject root =new JSONObject(response);                    JSONArray places =root.optJSONArray("Places");                    for (int i=0;i<places.length();i++){                        JSONObject placeobj = places.optJSONObject(i);                        String placeid = placeobj.optString("PlaceId");                        Depature.add(placeid);                        Log.d(TAG,"cheeking for update for depature : "+Depature);                    }                    //TODO: call function flight list......                    callflightmethod();                } catch (Exception e) {                    Log.e(TAG, "error : " + e);                }            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                Log.e(TAG, "volley error : " + error);            }        }){            @Override            public Map<String, String> getHeaders() throws AuthFailureError {                Map<String, String>  params = new HashMap<>();                params.put("X-RapidAPI-Host", "skyscanner-skyscanner-flight-search-v1.p.rapidapi.com");                params.put("X-RapidAPI-Key", "c332486ef4msh1b1ff96daa23844p1236b4jsn662354e9312a");   //changed key                return params;            }        };        requestQueue.add(stringRequest);        Log.v(TAG, "Before return : " + Depature);        //return code;    }    private void callflightmethod(){        for (int i=0;i<Depature.size();i++){            String a = Depature.get(i);            for (int j=0;j<arrival.size();j++){                String d = arrival.get(j);                flightlist(a,d);            }        }    }    private void flightlist(String arrival,String depature){        List<String> fromto= new ArrayList<>();        SharedviewModel sharedviewModel =new ViewModelProvider(requireActivity()).get(SharedviewModel.class);        RequestQueue requestQueue = Volley.newRequestQueue(getContext());        String url = "https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/US/USD/en-US/"+depature+"/"+arrival+"/anytime";        String uri = Uri.parse(url)                .buildUpon()                .build().toString();        StringRequest stringRequest=new StringRequest(Request.Method.GET, uri, new Response.Listener<String>() {            @Override            public void onResponse(String response) {                try {                    JSONObject root =new JSONObject(response);                    Log.e(TAG, "List response : " + response);                    String name =null;                    String price =null;                    JSONArray carriers =root.optJSONArray("Carriers");                    for (int i=0;i<carriers.length();i++){                        JSONObject carobj= carriers.getJSONObject(i);                        name =carobj.optString("Name");                        flightHelpersname.add(name);                        //TODO: make another constructor..... for name list                        Log.e(TAG, "chacking name : " + name);                        JSONArray places = root.optJSONArray("Places");                        for (int j=0;j<places.length();j++){                            JSONObject placeobj = places.optJSONObject(j);                            String namef = placeobj.optString("Name");                            fromto.add(namef);                        }                        JSONArray routes = root.getJSONArray("Routes");                        for (int k=0;k<routes.length();k++){                            JSONObject routeobj = routes.optJSONObject(k);                            price = routeobj.optString("Price");                        }                        flightHelpers.add(new FlightHelper(name,fromto,price));                    }                    flightAdapter =new FlightAdapter(getActivity(),flightHelpers);                    ListView listView=getView().findViewById(R.id.Flightslistf);                    listView.setAdapter(flightAdapter);                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {                        @Override                        public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {                            FlightHelper helper= flightHelpers.get(i);                            String flight_name = helper.getmAname();                            sharedviewModel.setResultsF(flight_name);                            getParentFragmentManager().popBackStack();                        }                    });                } catch (Exception e) {                    Log.e(TAG, "error : " + e);                }            }        }, new Response.ErrorListener() {            @Override            public void onErrorResponse(VolleyError error) {                Log.e(TAG, "volley error : " + error);            }        }){            @Override            public Map<String, String> getHeaders() throws AuthFailureError {                Map<String, String>  params = new HashMap<>();                params.put("X-RapidAPI-Host", "skyscanner-skyscanner-flight-search-v1.p.rapidapi.com");                params.put("X-RapidAPI-Key", "c332486ef4msh1b1ff96daa23844p1236b4jsn662354e9312a");   //changed key                return params;            }        };        requestQueue.add(stringRequest);    }}